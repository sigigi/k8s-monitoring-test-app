name: Build & Push Docker Images

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      main_app: ${{ steps.filter.outputs.main_app }}
      sub1_app: ${{ steps.filter.outputs.sub1_app }}
      sub2_app: ${{ steps.filter.outputs.sub2_app }}
      common: ${{ steps.filter.outputs.common }}
      SHA: ${{ steps.vars.outputs.SHA }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get short SHA
        id: vars
        run: echo "SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Detect changed apps
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            main_app:
              - 'apps/main-app/**'
              - 'argocd/main-app.yaml'
            sub1_app:
              - 'apps/sub1-app/**'
              - 'argocd/sub1-app.yaml'
            sub2_app:
              - 'apps/sub2-app/**'
              - 'argocd/sub2-app.yaml'
            common:
              - 'Dockerfile'
              - '.github/**'
              - 'package.json'
  build-main-app:
    needs: detect-changes
    if: needs.detect-changes.outputs.main_app == 'true' || needs.detect-changes.outputs.common == 'true'
    runs-on: ubuntu-latest
    env:
      APP: main-app
    outputs:
      changed: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy shared package.json into app directory
        run: |
          cp package*.json apps/${{ env.APP }}/

      - name: Replace package.json name
        run: |
          jq --arg name "${{ env.APP }}" '.name = $name' \
             apps/${{ env.APP }}/package.json > apps/${{ env.APP }}/package.tmp.json
          mv apps/${{ env.APP }}/package.tmp.json apps/${{ env.APP }}/package.json
          
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push main-app
        uses: docker/build-push-action@v4
        with:
          context: ./apps/${{ env.APP }}
          file: ./Dockerfile
          push: true
          tags: "${{ vars.DOCKER_REGISTRY }}:${{ env.APP }}-${{ needs.detect-changes.outputs.SHA }}"

  build-sub1-app:
    needs: detect-changes
    if: needs.detect-changes.outputs.sub1_app == 'true' || needs.detect-changes.outputs.common == 'true'
    runs-on: ubuntu-latest
    env:
      APP: sub1-app
    outputs:
      changed: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy shared package.json into app directory
        run: |
          cp package*.json apps/${{ env.APP }}/

      - name: Replace package.json name
        run: |
          jq --arg name "${{ env.APP }}" '.name = $name' \
             apps/${{ env.APP }}/package.json > apps/${{ env.APP }}/package.tmp.json
          mv apps/${{ env.APP }}/package.tmp.json apps/${{ env.APP }}/package.json

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push sub1-app
        uses: docker/build-push-action@v4
        with:
          context: ./apps/${{ env.APP }}
          file: ./Dockerfile
          push: true
          tags: "${{ vars.DOCKER_REGISTRY }}:${{ env.APP }}-${{ needs.detect-changes.outputs.SHA }}"
     
  build-sub2-app:
    needs: detect-changes
    if: needs.detect-changes.outputs.sub2_app == 'true' || needs.detect-changes.outputs.common == 'true'
    runs-on: ubuntu-latest
    env:
      APP: sub2-app
    outputs:
      changed: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Copy shared package.json into app directory
        run: |
          cp package*.json apps/${{ env.APP }}/

      - name: Replace package.json name
        run: |
          jq --arg name "${{ env.APP }}" '.name = $name' \
             apps/${{ env.APP }}/package.json > apps/${{ env.APP }}/package.tmp.json
          mv apps/sub2-app/package.tmp.json apps/sub2-app/package.json

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push sub2-app
        uses: docker/build-push-action@v4
        with:
          context: ./apps/${{ env.APP }}
          file: ./Dockerfile
          push: true
          tags: "${{ vars.DOCKER_REGISTRY }}:${{ env.APP }}-${{ needs.detect-changes.outputs.SHA }}"

  update-values:
    needs: [build-main-app, build-sub1-app, build-sub2-app, detect-changes]
    runs-on: ubuntu-latest
    if: |
      needs.build-main-app.outputs.changed == 'true' ||
      needs.build-sub1-app.outputs.changed == 'true' ||
      needs.build-sub2-app.outputs.changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install yq
        run: |
          sudo wget -qO /usr/local/bin/yq \
            https://github.com/mikefarah/yq/releases/download/v4.44.1/yq_linux_amd64
          sudo chmod +x /usr/local/bin/yq

      - name: Update image tags in Helm values.yaml
        run: |
          # 메인앱 처리
          if [[ "${{ needs.build-main-app.outputs.changed }}" == "true" ]]; then
            yq -i '.image.tag = "main-app-${{ needs.detect-changes.outputs.SHA }}"' apps/main-app/helm/main-app/values.yaml
          fi

          # sub1-app 처리
          if [[ "${{ needs.build-sub1-app.outputs.changed }}" == "true" ]]; then
            yq -i '.image.tag = "sub1-app-${{ needs.detect-changes.outputs.SHA }}"' apps/sub1-app/helm/sub1-app/values.yaml
          fi

          # sub2-app 처리
          if [[ "${{ needs.build-sub2-app.outputs.changed }}" == "true" ]]; then
            yq -i '.image.tag = "sub2-app-${{ needs.detect-changes.outputs.SHA }}"' apps/sub2-app/helm/sub2-app/values.yaml
          fi

      - name: Commit & Push values.yaml changes
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git add apps/*/helm/*/values.yaml
          git commit -m "chore(ci): update image tags in Helm values" || echo "no changes"
          git push origin HEAD:${{ github.ref }}